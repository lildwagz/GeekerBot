import requests
from discord.ext import commands
import json
import discord
from html import unescape


############
# COG Body #
############
from cogs.func.exploitFunc import get_get_request, exploitdb_strings, platforms, tags_help, data_params ,types


class ExploitDb(commands.Cog, name="Utility"):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(description="Searches exploit-db for exploits.",
                      usage="[-Title][-CVE][-Type][-Platform][-Port]["
                            "-Content][-Author][-Tag][-Help] {Query}")
    async def exploit(self, ctx, *, query: str):
        query = query.lower()

        parameters = get_get_request(query)
        # help menu
        if '-help' in query or parameters.split(" ")[0] == '!':
            help_called_color = 0x0080ff
            help_called_thumbnail = "https://cdn.discordapp.com/attachments/695950796248" \
                                    "055848/696071528768471050/spider-blue.png"
            help_triggered_color = 0xCD0000
            help_triggered_thumbnail = "https://cdn.discordapp.com/attachments/695950796248" \
                                       "055848/696072273874124830/spider-red.png"
            # shows allowed types
            parameters = str(parameters)
            triggered = "!" in parameters
            if triggered:
                color = help_triggered_color
                thumbnail = help_triggered_thumbnail
            else:
                color = help_called_color
                thumbnail = help_called_thumbnail
            if 'type' in query or 'type' in parameters:
                embed = discord.Embed(
                    title=exploitdb_strings['help_title'],
                    description=f"{exploitdb_strings['wrong_type'] if triggered else ''}"
                                f"Allowed types are: \n`{', '.join(types)}`",
                    color=color
                )
                embed.set_thumbnail(url=thumbnail)
                await ctx.send(embed=embed)
            if 'platform' in query or 'platform' in parameters:
                embed = discord.Embed(
                    title=exploitdb_strings['help_title'],
                    description=exploitdb_strings['wrong_platform']
                    if 'platform' in parameters else f"{exploitdb_strings['allowed_platforms']}\n",
                    color=color
                )
                embed.set_thumbnail(url=thumbnail)
                field = ''
                al = 'a'
                for platform in platforms:
                    if platform[0] != al:
                        embed.add_field(name=al.upper(),
                                        value=field[:-2],
                                        inline=True)
                        al = platform[0]
                        field = ''
                    field += platform + ", "
                await ctx.send(embed=embed)
            if 'tag' in query or 'tag' in parameters:
                embed = discord.Embed(
                    title=exploitdb_strings["help_title"],
                    description=exploitdb_strings["wrong_tag"]
                    if 'tag' in parameters else exploitdb_strings["allowed_tags"],
                    color=color
                )
                embed.set_thumbnail(url=thumbnail)
                embed.add_field(
                    name="Tag name",
                    value="What to type",
                    inline=False
                )
                for key in tags_help.keys():
                    embed.add_field(name=key,
                                    value=tags_help[key],
                                    inline=True)
                embed.set_thumbnail(url=thumbnail)
                await ctx.send(embed=embed)
            elif 'type' not in query and 'platform' not in query and 'tag' not in query:
                embed = discord.Embed(
                    title=exploitdb_strings["help_title"],
                    description=exploitdb_strings["help_flags"],
                    color=color
                )
                embed.add_field(name="-Title",
                                value=exploitdb_strings["help_flags_title"],
                                inline=False)
                embed.add_field(name="-CVE",
                                value=exploitdb_strings["help_flags_cve"],
                                inline=False)

                embed.add_field(name="-Type",
                                value=exploitdb_strings["help_flags_type"],
                                inline=False)
                embed.add_field(name="-Platform",
                                value=exploitdb_strings["help_flags_platform"],
                                inline=False)
                embed.add_field(name="-Port",
                                value=exploitdb_strings["help_flags_port"],
                                inline=False)
                embed.add_field(name="-Content",
                                value=exploitdb_strings["help_flags_content"],
                                inline=False)
                embed.add_field(name="-Author",
                                value=exploitdb_strings["help_flags_author"],
                                inline=False)
                embed.add_field(name="-Tag",
                                value=exploitdb_strings["help_flags_tag"],
                                inline=False)
                embed.add_field(name="Other infos:",
                                value=exploitdb_strings["help_flags_other"],
                                inline=False)
                embed.set_thumbnail(url=thumbnail)
                await ctx.send(embed=embed)
            return
        if not parameters:
            embed = discord.Embed(
                title=exploitdb_strings["syntax_error"],
                description=f"Try -Help",
                color=0xCD0000
            )
            embed.set_thumbnail(url="https://media.discordapp.net/attachments/695669681662722069/695736581662965800/"
                                    "spider-red.png?width=60&height=60")
            await ctx.send(embed=embed)
            return

        url = "https://www.exploit-db.com/search" + parameters
        soup = requests.get(url + data_params,
                            headers={'User-Agent': 'TryHackMeBot',
                                     'Referer': 'https://www.exploit-db.com/search' + get_get_request(query),
                                     'Accept': 'application/json, text/javascript, */*; q=0.01',
                                     'Accept - Language': 'en - US, en; q = 0.5',
                                     'Accept - Encoding': 'gzip, deflate',
                                     'X-Requested-With': 'XMLHttpRequest',
                                     'Connection': 'close',
                                     'Host': 'www.exploit-db.com'}).content
        soup = json.loads(soup)
        if len(soup['data']) == 0:
            embed = discord.Embed(
                title=exploitdb_strings["no_exploits"],
                description=exploitdb_strings["no_exploits_desc"],
                color=0xCD0000
            )
            embed.set_thumbnail(url="https://media.discordapp.net/attachments/695669681662722069/695736581662965800/"
                                    "spider-red.png?width=60&height=60")
            await ctx.send(embed=embed)
            return
        embed = discord.Embed(
            title="Exploit-DB",
            description=f"Found {soup['recordsTotal']} Exploit{'' if len(soup['data']) == 1 else 's'}\n\n",
            color=0xEB6024,
        )
        embed.set_thumbnail(url="https://media.discordapp.net/attachments/"
                                "695669681662722069/695722036236124291/spider-orange.png?width=60&height=60")
        for exploit in soup['data']:
            embed.add_field(name="\n-------------------------------------------------------"
                                 "----------------------------",
                            value=f"Exploit #{exploit['id']}", inline=False)
            cve = 'N/A'
            embed.add_field(name="Description:",
                            value=unescape(exploit['description'][1]), inline=False)
            for code in exploit['code']:
                if code['code_type'] == 'cve':
                    cve = code['code']
            embed.add_field(name='CVE:',
                            value=cve, inline=True)
            embed.add_field(name='Platform:',
                            value=exploit['platform_id'], inline=True)
            embed.add_field(name="Download?",
                            value='yes' if 'download' in exploit.keys() else 'no',
                            inline=True)
            embed.add_field(name='More Information:',
                            value=f"[Exploit-DB]"
                                  f"(https://www.exploit-db.com/exploits/{exploit['id']})")
        embed.add_field(name="-------------------------------------------------------"
                             "----------------------------",
                        value=f"See more results [here]({url})", inline=False)
        await ctx.send(embed=embed)


def setup(bot):
    bot.add_cog(ExploitDb(bot))
